/*
 * This file is generated by jOOQ.
 */
package com.dovaleac.guessing.game.jooq.jklingsporn.generated.tables.records;


import com.dovaleac.guessing.game.jooq.jklingsporn.generated.tables.Channel;
import com.dovaleac.guessing.game.jooq.jklingsporn.generated.tables.interfaces.IChannel;

import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ChannelRecord extends UpdatableRecordImpl<ChannelRecord> implements VertxPojo, Record3<Integer, String, String>, IChannel {

    private static final long serialVersionUID = 77540138;

    /**
     * Setter for <code>dealers.channel.id</code>.
     */
    @Override
    public ChannelRecord setId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>dealers.channel.id</code>.
     */
    @Override
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>dealers.channel.code</code>.
     */
    @Override
    public ChannelRecord setCode(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>dealers.channel.code</code>.
     */
    @Override
    public String getCode() {
        return (String) get(1);
    }

    /**
     * Setter for <code>dealers.channel.name</code>.
     */
    @Override
    public ChannelRecord setName(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>dealers.channel.name</code>.
     */
    @Override
    public String getName() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<Integer, String, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<Integer, String, String> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Channel.CHANNEL.ID;
    }

    @Override
    public Field<String> field2() {
        return Channel.CHANNEL.CODE;
    }

    @Override
    public Field<String> field3() {
        return Channel.CHANNEL.NAME;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getCode();
    }

    @Override
    public String component3() {
        return getName();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getCode();
    }

    @Override
    public String value3() {
        return getName();
    }

    @Override
    public ChannelRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public ChannelRecord value2(String value) {
        setCode(value);
        return this;
    }

    @Override
    public ChannelRecord value3(String value) {
        setName(value);
        return this;
    }

    @Override
    public ChannelRecord values(Integer value1, String value2, String value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IChannel from) {
        setId(from.getId());
        setCode(from.getCode());
        setName(from.getName());
    }

    @Override
    public <E extends IChannel> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ChannelRecord
     */
    public ChannelRecord() {
        super(Channel.CHANNEL);
    }

    /**
     * Create a detached, initialised ChannelRecord
     */
    public ChannelRecord(Integer id, String code, String name) {
        super(Channel.CHANNEL);

        set(0, id);
        set(1, code);
        set(2, name);
    }

    public ChannelRecord(io.vertx.core.json.JsonObject json) {
        this();
        fromJson(json);
    }
}
