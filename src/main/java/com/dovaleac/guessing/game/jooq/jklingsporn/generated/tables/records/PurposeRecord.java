/*
 * This file is generated by jOOQ.
 */
package com.dovaleac.guessing.game.jooq.jklingsporn.generated.tables.records;


import com.dovaleac.guessing.game.jooq.jklingsporn.generated.tables.Purpose;
import com.dovaleac.guessing.game.jooq.jklingsporn.generated.tables.interfaces.IPurpose;

import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PurposeRecord extends UpdatableRecordImpl<PurposeRecord> implements VertxPojo, Record2<Integer, String>, IPurpose {

    private static final long serialVersionUID = 1987569447;

    /**
     * Setter for <code>dealers.purpose.id</code>.
     */
    @Override
    public PurposeRecord setId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>dealers.purpose.id</code>.
     */
    @Override
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>dealers.purpose.name</code>.
     */
    @Override
    public PurposeRecord setName(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>dealers.purpose.name</code>.
     */
    @Override
    public String getName() {
        return (String) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<Integer, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<Integer, String> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Purpose.PURPOSE.ID;
    }

    @Override
    public Field<String> field2() {
        return Purpose.PURPOSE.NAME;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public PurposeRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public PurposeRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public PurposeRecord values(Integer value1, String value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IPurpose from) {
        setId(from.getId());
        setName(from.getName());
    }

    @Override
    public <E extends IPurpose> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PurposeRecord
     */
    public PurposeRecord() {
        super(Purpose.PURPOSE);
    }

    /**
     * Create a detached, initialised PurposeRecord
     */
    public PurposeRecord(Integer id, String name) {
        super(Purpose.PURPOSE);

        set(0, id);
        set(1, name);
    }

    public PurposeRecord(io.vertx.core.json.JsonObject json) {
        this();
        fromJson(json);
    }
}
