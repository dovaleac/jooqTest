/*
 * This file is generated by jOOQ.
 */
package com.dovaleac.guessing.game.jooq.jklingsporn.generated.tables.daos;


import com.dovaleac.guessing.game.jooq.jklingsporn.generated.tables.Purpose;
import com.dovaleac.guessing.game.jooq.jklingsporn.generated.tables.records.PurposeRecord;

import io.github.jklingsporn.vertx.jooq.shared.reactive.AbstractReactiveVertxDAO;

import java.util.Collection;

import org.jooq.Configuration;


import java.util.List;
import io.reactivex.Single;
import java.util.Optional;
import io.github.jklingsporn.vertx.jooq.rx.reactivepg.ReactiveRXQueryExecutor;
/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PurposeDao extends AbstractReactiveVertxDAO<PurposeRecord, com.dovaleac.guessing.game.jooq.jklingsporn.generated.tables.pojos.Purpose, Integer, Single<List<com.dovaleac.guessing.game.jooq.jklingsporn.generated.tables.pojos.Purpose>>, Single<Optional<com.dovaleac.guessing.game.jooq.jklingsporn.generated.tables.pojos.Purpose>>, Single<Integer>, Single<Integer>> implements io.github.jklingsporn.vertx.jooq.rx.VertxDAO<PurposeRecord,com.dovaleac.guessing.game.jooq.jklingsporn.generated.tables.pojos.Purpose,Integer> {

    /**
     * @param configuration The Configuration used for rendering and query execution.
     * @param vertx the vertx instance
     */
    public PurposeDao(Configuration configuration, io.vertx.reactivex.sqlclient.SqlClient delegate) {
        super(Purpose.PURPOSE, com.dovaleac.guessing.game.jooq.jklingsporn.generated.tables.pojos.Purpose.class, new ReactiveRXQueryExecutor<PurposeRecord,com.dovaleac.guessing.game.jooq.jklingsporn.generated.tables.pojos.Purpose,Integer>(configuration,delegate,com.dovaleac.guessing.game.jooq.jklingsporn.generated.tables.mappers.RowMappers.getPurposeMapper()));
    }

    @Override
    protected Integer getId(com.dovaleac.guessing.game.jooq.jklingsporn.generated.tables.pojos.Purpose object) {
        return object.getId();
    }

    /**
     * Find records that have <code>name IN (values)</code> asynchronously
     */
    public Single<List<com.dovaleac.guessing.game.jooq.jklingsporn.generated.tables.pojos.Purpose>> findManyByName(Collection<String> values) {
        return findManyByCondition(Purpose.PURPOSE.NAME.in(values));
    }

    /**
     * Find records that have <code>name IN (values)</code> asynchronously limited by the given limit
     */
    public Single<List<com.dovaleac.guessing.game.jooq.jklingsporn.generated.tables.pojos.Purpose>> findManyByName(Collection<String> values, int limit) {
        return findManyByCondition(Purpose.PURPOSE.NAME.in(values),limit);
    }

    @Override
    public ReactiveRXQueryExecutor<PurposeRecord,com.dovaleac.guessing.game.jooq.jklingsporn.generated.tables.pojos.Purpose,Integer> queryExecutor(){
        return (ReactiveRXQueryExecutor<PurposeRecord,com.dovaleac.guessing.game.jooq.jklingsporn.generated.tables.pojos.Purpose,Integer>) super.queryExecutor();
    }
}
