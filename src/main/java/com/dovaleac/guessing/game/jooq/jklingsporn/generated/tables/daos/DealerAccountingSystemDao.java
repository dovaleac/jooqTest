/*
 * This file is generated by jOOQ.
 */
package com.dovaleac.guessing.game.jooq.jklingsporn.generated.tables.daos;


import com.dovaleac.guessing.game.jooq.jklingsporn.generated.tables.DealerAccountingSystem;
import com.dovaleac.guessing.game.jooq.jklingsporn.generated.tables.records.DealerAccountingSystemRecord;

import io.github.jklingsporn.vertx.jooq.shared.reactive.AbstractReactiveVertxDAO;

import java.time.OffsetDateTime;
import java.util.Collection;

import org.jooq.Configuration;


import java.util.List;
import io.reactivex.Single;
import java.util.Optional;
import io.github.jklingsporn.vertx.jooq.rx.reactivepg.ReactiveRXQueryExecutor;
/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DealerAccountingSystemDao extends AbstractReactiveVertxDAO<DealerAccountingSystemRecord, com.dovaleac.guessing.game.jooq.jklingsporn.generated.tables.pojos.DealerAccountingSystem, Integer, Single<List<com.dovaleac.guessing.game.jooq.jklingsporn.generated.tables.pojos.DealerAccountingSystem>>, Single<Optional<com.dovaleac.guessing.game.jooq.jklingsporn.generated.tables.pojos.DealerAccountingSystem>>, Single<Integer>, Single<Integer>> implements io.github.jklingsporn.vertx.jooq.rx.VertxDAO<DealerAccountingSystemRecord,com.dovaleac.guessing.game.jooq.jklingsporn.generated.tables.pojos.DealerAccountingSystem,Integer> {

    /**
     * @param configuration The Configuration used for rendering and query execution.
     * @param vertx the vertx instance
     */
    public DealerAccountingSystemDao(Configuration configuration, io.vertx.reactivex.sqlclient.SqlClient delegate) {
        super(DealerAccountingSystem.DEALER_ACCOUNTING_SYSTEM, com.dovaleac.guessing.game.jooq.jklingsporn.generated.tables.pojos.DealerAccountingSystem.class, new ReactiveRXQueryExecutor<DealerAccountingSystemRecord,com.dovaleac.guessing.game.jooq.jklingsporn.generated.tables.pojos.DealerAccountingSystem,Integer>(configuration,delegate,com.dovaleac.guessing.game.jooq.jklingsporn.generated.tables.mappers.RowMappers.getDealerAccountingSystemMapper()));
    }

    @Override
    protected Integer getId(com.dovaleac.guessing.game.jooq.jklingsporn.generated.tables.pojos.DealerAccountingSystem object) {
        return object.getId();
    }

    /**
     * Find records that have <code>dealer_id IN (values)</code> asynchronously
     */
    public Single<List<com.dovaleac.guessing.game.jooq.jklingsporn.generated.tables.pojos.DealerAccountingSystem>> findManyByDealerId(Collection<Integer> values) {
        return findManyByCondition(DealerAccountingSystem.DEALER_ACCOUNTING_SYSTEM.DEALER_ID.in(values));
    }

    /**
     * Find records that have <code>dealer_id IN (values)</code> asynchronously limited by the given limit
     */
    public Single<List<com.dovaleac.guessing.game.jooq.jklingsporn.generated.tables.pojos.DealerAccountingSystem>> findManyByDealerId(Collection<Integer> values, int limit) {
        return findManyByCondition(DealerAccountingSystem.DEALER_ACCOUNTING_SYSTEM.DEALER_ID.in(values),limit);
    }

    /**
     * Find records that have <code>system_id IN (values)</code> asynchronously
     */
    public Single<List<com.dovaleac.guessing.game.jooq.jklingsporn.generated.tables.pojos.DealerAccountingSystem>> findManyBySystemId(Collection<Integer> values) {
        return findManyByCondition(DealerAccountingSystem.DEALER_ACCOUNTING_SYSTEM.SYSTEM_ID.in(values));
    }

    /**
     * Find records that have <code>system_id IN (values)</code> asynchronously limited by the given limit
     */
    public Single<List<com.dovaleac.guessing.game.jooq.jklingsporn.generated.tables.pojos.DealerAccountingSystem>> findManyBySystemId(Collection<Integer> values, int limit) {
        return findManyByCondition(DealerAccountingSystem.DEALER_ACCOUNTING_SYSTEM.SYSTEM_ID.in(values),limit);
    }

    /**
     * Find records that have <code>user_created IN (values)</code> asynchronously
     */
    public Single<List<com.dovaleac.guessing.game.jooq.jklingsporn.generated.tables.pojos.DealerAccountingSystem>> findManyByUserCreated(Collection<String> values) {
        return findManyByCondition(DealerAccountingSystem.DEALER_ACCOUNTING_SYSTEM.USER_CREATED.in(values));
    }

    /**
     * Find records that have <code>user_created IN (values)</code> asynchronously limited by the given limit
     */
    public Single<List<com.dovaleac.guessing.game.jooq.jklingsporn.generated.tables.pojos.DealerAccountingSystem>> findManyByUserCreated(Collection<String> values, int limit) {
        return findManyByCondition(DealerAccountingSystem.DEALER_ACCOUNTING_SYSTEM.USER_CREATED.in(values),limit);
    }

    /**
     * Find records that have <code>user_updated IN (values)</code> asynchronously
     */
    public Single<List<com.dovaleac.guessing.game.jooq.jklingsporn.generated.tables.pojos.DealerAccountingSystem>> findManyByUserUpdated(Collection<String> values) {
        return findManyByCondition(DealerAccountingSystem.DEALER_ACCOUNTING_SYSTEM.USER_UPDATED.in(values));
    }

    /**
     * Find records that have <code>user_updated IN (values)</code> asynchronously limited by the given limit
     */
    public Single<List<com.dovaleac.guessing.game.jooq.jklingsporn.generated.tables.pojos.DealerAccountingSystem>> findManyByUserUpdated(Collection<String> values, int limit) {
        return findManyByCondition(DealerAccountingSystem.DEALER_ACCOUNTING_SYSTEM.USER_UPDATED.in(values),limit);
    }

    /**
     * Find records that have <code>user_deleted IN (values)</code> asynchronously
     */
    public Single<List<com.dovaleac.guessing.game.jooq.jklingsporn.generated.tables.pojos.DealerAccountingSystem>> findManyByUserDeleted(Collection<String> values) {
        return findManyByCondition(DealerAccountingSystem.DEALER_ACCOUNTING_SYSTEM.USER_DELETED.in(values));
    }

    /**
     * Find records that have <code>user_deleted IN (values)</code> asynchronously limited by the given limit
     */
    public Single<List<com.dovaleac.guessing.game.jooq.jklingsporn.generated.tables.pojos.DealerAccountingSystem>> findManyByUserDeleted(Collection<String> values, int limit) {
        return findManyByCondition(DealerAccountingSystem.DEALER_ACCOUNTING_SYSTEM.USER_DELETED.in(values),limit);
    }

    /**
     * Find records that have <code>creation_date IN (values)</code> asynchronously
     */
    public Single<List<com.dovaleac.guessing.game.jooq.jklingsporn.generated.tables.pojos.DealerAccountingSystem>> findManyByCreationDate(Collection<OffsetDateTime> values) {
        return findManyByCondition(DealerAccountingSystem.DEALER_ACCOUNTING_SYSTEM.CREATION_DATE.in(values));
    }

    /**
     * Find records that have <code>creation_date IN (values)</code> asynchronously limited by the given limit
     */
    public Single<List<com.dovaleac.guessing.game.jooq.jklingsporn.generated.tables.pojos.DealerAccountingSystem>> findManyByCreationDate(Collection<OffsetDateTime> values, int limit) {
        return findManyByCondition(DealerAccountingSystem.DEALER_ACCOUNTING_SYSTEM.CREATION_DATE.in(values),limit);
    }

    /**
     * Find records that have <code>update_date IN (values)</code> asynchronously
     */
    public Single<List<com.dovaleac.guessing.game.jooq.jklingsporn.generated.tables.pojos.DealerAccountingSystem>> findManyByUpdateDate(Collection<OffsetDateTime> values) {
        return findManyByCondition(DealerAccountingSystem.DEALER_ACCOUNTING_SYSTEM.UPDATE_DATE.in(values));
    }

    /**
     * Find records that have <code>update_date IN (values)</code> asynchronously limited by the given limit
     */
    public Single<List<com.dovaleac.guessing.game.jooq.jklingsporn.generated.tables.pojos.DealerAccountingSystem>> findManyByUpdateDate(Collection<OffsetDateTime> values, int limit) {
        return findManyByCondition(DealerAccountingSystem.DEALER_ACCOUNTING_SYSTEM.UPDATE_DATE.in(values),limit);
    }

    /**
     * Find records that have <code>deletion_date IN (values)</code> asynchronously
     */
    public Single<List<com.dovaleac.guessing.game.jooq.jklingsporn.generated.tables.pojos.DealerAccountingSystem>> findManyByDeletionDate(Collection<OffsetDateTime> values) {
        return findManyByCondition(DealerAccountingSystem.DEALER_ACCOUNTING_SYSTEM.DELETION_DATE.in(values));
    }

    /**
     * Find records that have <code>deletion_date IN (values)</code> asynchronously limited by the given limit
     */
    public Single<List<com.dovaleac.guessing.game.jooq.jklingsporn.generated.tables.pojos.DealerAccountingSystem>> findManyByDeletionDate(Collection<OffsetDateTime> values, int limit) {
        return findManyByCondition(DealerAccountingSystem.DEALER_ACCOUNTING_SYSTEM.DELETION_DATE.in(values),limit);
    }

    @Override
    public ReactiveRXQueryExecutor<DealerAccountingSystemRecord,com.dovaleac.guessing.game.jooq.jklingsporn.generated.tables.pojos.DealerAccountingSystem,Integer> queryExecutor(){
        return (ReactiveRXQueryExecutor<DealerAccountingSystemRecord,com.dovaleac.guessing.game.jooq.jklingsporn.generated.tables.pojos.DealerAccountingSystem,Integer>) super.queryExecutor();
    }
}
