/*
 * This file is generated by jOOQ.
 */
package com.dovaleac.guessing.game.jooq.jklingsporn.generated.tables.daos;


import com.dovaleac.guessing.game.jooq.jklingsporn.generated.tables.ContactInformation;
import com.dovaleac.guessing.game.jooq.jklingsporn.generated.tables.records.ContactInformationRecord;

import io.github.jklingsporn.vertx.jooq.shared.reactive.AbstractReactiveVertxDAO;

import java.time.OffsetDateTime;
import java.util.Collection;

import org.jooq.Configuration;


import java.util.List;
import io.reactivex.Single;
import java.util.Optional;
import io.github.jklingsporn.vertx.jooq.rx.reactivepg.ReactiveRXQueryExecutor;
/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ContactInformationDao extends AbstractReactiveVertxDAO<ContactInformationRecord, com.dovaleac.guessing.game.jooq.jklingsporn.generated.tables.pojos.ContactInformation, Integer, Single<List<com.dovaleac.guessing.game.jooq.jklingsporn.generated.tables.pojos.ContactInformation>>, Single<Optional<com.dovaleac.guessing.game.jooq.jklingsporn.generated.tables.pojos.ContactInformation>>, Single<Integer>, Single<Integer>> implements io.github.jklingsporn.vertx.jooq.rx.VertxDAO<ContactInformationRecord,com.dovaleac.guessing.game.jooq.jklingsporn.generated.tables.pojos.ContactInformation,Integer> {

    /**
     * @param configuration The Configuration used for rendering and query execution.
     * @param vertx the vertx instance
     */
    public ContactInformationDao(Configuration configuration, io.vertx.reactivex.sqlclient.SqlClient delegate) {
        super(ContactInformation.CONTACT_INFORMATION, com.dovaleac.guessing.game.jooq.jklingsporn.generated.tables.pojos.ContactInformation.class, new ReactiveRXQueryExecutor<ContactInformationRecord,com.dovaleac.guessing.game.jooq.jklingsporn.generated.tables.pojos.ContactInformation,Integer>(configuration,delegate,com.dovaleac.guessing.game.jooq.jklingsporn.generated.tables.mappers.RowMappers.getContactInformationMapper()));
    }

    @Override
    protected Integer getId(com.dovaleac.guessing.game.jooq.jklingsporn.generated.tables.pojos.ContactInformation object) {
        return object.getId();
    }

    /**
     * Find records that have <code>name IN (values)</code> asynchronously
     */
    public Single<List<com.dovaleac.guessing.game.jooq.jklingsporn.generated.tables.pojos.ContactInformation>> findManyByName(Collection<String> values) {
        return findManyByCondition(ContactInformation.CONTACT_INFORMATION.NAME.in(values));
    }

    /**
     * Find records that have <code>name IN (values)</code> asynchronously limited by the given limit
     */
    public Single<List<com.dovaleac.guessing.game.jooq.jklingsporn.generated.tables.pojos.ContactInformation>> findManyByName(Collection<String> values, int limit) {
        return findManyByCondition(ContactInformation.CONTACT_INFORMATION.NAME.in(values),limit);
    }

    /**
     * Find records that have <code>email IN (values)</code> asynchronously
     */
    public Single<List<com.dovaleac.guessing.game.jooq.jklingsporn.generated.tables.pojos.ContactInformation>> findManyByEmail(Collection<String> values) {
        return findManyByCondition(ContactInformation.CONTACT_INFORMATION.EMAIL.in(values));
    }

    /**
     * Find records that have <code>email IN (values)</code> asynchronously limited by the given limit
     */
    public Single<List<com.dovaleac.guessing.game.jooq.jklingsporn.generated.tables.pojos.ContactInformation>> findManyByEmail(Collection<String> values, int limit) {
        return findManyByCondition(ContactInformation.CONTACT_INFORMATION.EMAIL.in(values),limit);
    }

    /**
     * Find records that have <code>phone_number IN (values)</code> asynchronously
     */
    public Single<List<com.dovaleac.guessing.game.jooq.jklingsporn.generated.tables.pojos.ContactInformation>> findManyByPhoneNumber(Collection<String> values) {
        return findManyByCondition(ContactInformation.CONTACT_INFORMATION.PHONE_NUMBER.in(values));
    }

    /**
     * Find records that have <code>phone_number IN (values)</code> asynchronously limited by the given limit
     */
    public Single<List<com.dovaleac.guessing.game.jooq.jklingsporn.generated.tables.pojos.ContactInformation>> findManyByPhoneNumber(Collection<String> values, int limit) {
        return findManyByCondition(ContactInformation.CONTACT_INFORMATION.PHONE_NUMBER.in(values),limit);
    }

    /**
     * Find records that have <code>user_created IN (values)</code> asynchronously
     */
    public Single<List<com.dovaleac.guessing.game.jooq.jklingsporn.generated.tables.pojos.ContactInformation>> findManyByUserCreated(Collection<String> values) {
        return findManyByCondition(ContactInformation.CONTACT_INFORMATION.USER_CREATED.in(values));
    }

    /**
     * Find records that have <code>user_created IN (values)</code> asynchronously limited by the given limit
     */
    public Single<List<com.dovaleac.guessing.game.jooq.jklingsporn.generated.tables.pojos.ContactInformation>> findManyByUserCreated(Collection<String> values, int limit) {
        return findManyByCondition(ContactInformation.CONTACT_INFORMATION.USER_CREATED.in(values),limit);
    }

    /**
     * Find records that have <code>user_updated IN (values)</code> asynchronously
     */
    public Single<List<com.dovaleac.guessing.game.jooq.jklingsporn.generated.tables.pojos.ContactInformation>> findManyByUserUpdated(Collection<String> values) {
        return findManyByCondition(ContactInformation.CONTACT_INFORMATION.USER_UPDATED.in(values));
    }

    /**
     * Find records that have <code>user_updated IN (values)</code> asynchronously limited by the given limit
     */
    public Single<List<com.dovaleac.guessing.game.jooq.jklingsporn.generated.tables.pojos.ContactInformation>> findManyByUserUpdated(Collection<String> values, int limit) {
        return findManyByCondition(ContactInformation.CONTACT_INFORMATION.USER_UPDATED.in(values),limit);
    }

    /**
     * Find records that have <code>user_deleted IN (values)</code> asynchronously
     */
    public Single<List<com.dovaleac.guessing.game.jooq.jklingsporn.generated.tables.pojos.ContactInformation>> findManyByUserDeleted(Collection<String> values) {
        return findManyByCondition(ContactInformation.CONTACT_INFORMATION.USER_DELETED.in(values));
    }

    /**
     * Find records that have <code>user_deleted IN (values)</code> asynchronously limited by the given limit
     */
    public Single<List<com.dovaleac.guessing.game.jooq.jklingsporn.generated.tables.pojos.ContactInformation>> findManyByUserDeleted(Collection<String> values, int limit) {
        return findManyByCondition(ContactInformation.CONTACT_INFORMATION.USER_DELETED.in(values),limit);
    }

    /**
     * Find records that have <code>creation_date IN (values)</code> asynchronously
     */
    public Single<List<com.dovaleac.guessing.game.jooq.jklingsporn.generated.tables.pojos.ContactInformation>> findManyByCreationDate(Collection<OffsetDateTime> values) {
        return findManyByCondition(ContactInformation.CONTACT_INFORMATION.CREATION_DATE.in(values));
    }

    /**
     * Find records that have <code>creation_date IN (values)</code> asynchronously limited by the given limit
     */
    public Single<List<com.dovaleac.guessing.game.jooq.jklingsporn.generated.tables.pojos.ContactInformation>> findManyByCreationDate(Collection<OffsetDateTime> values, int limit) {
        return findManyByCondition(ContactInformation.CONTACT_INFORMATION.CREATION_DATE.in(values),limit);
    }

    /**
     * Find records that have <code>update_date IN (values)</code> asynchronously
     */
    public Single<List<com.dovaleac.guessing.game.jooq.jklingsporn.generated.tables.pojos.ContactInformation>> findManyByUpdateDate(Collection<OffsetDateTime> values) {
        return findManyByCondition(ContactInformation.CONTACT_INFORMATION.UPDATE_DATE.in(values));
    }

    /**
     * Find records that have <code>update_date IN (values)</code> asynchronously limited by the given limit
     */
    public Single<List<com.dovaleac.guessing.game.jooq.jklingsporn.generated.tables.pojos.ContactInformation>> findManyByUpdateDate(Collection<OffsetDateTime> values, int limit) {
        return findManyByCondition(ContactInformation.CONTACT_INFORMATION.UPDATE_DATE.in(values),limit);
    }

    /**
     * Find records that have <code>deletion_date IN (values)</code> asynchronously
     */
    public Single<List<com.dovaleac.guessing.game.jooq.jklingsporn.generated.tables.pojos.ContactInformation>> findManyByDeletionDate(Collection<OffsetDateTime> values) {
        return findManyByCondition(ContactInformation.CONTACT_INFORMATION.DELETION_DATE.in(values));
    }

    /**
     * Find records that have <code>deletion_date IN (values)</code> asynchronously limited by the given limit
     */
    public Single<List<com.dovaleac.guessing.game.jooq.jklingsporn.generated.tables.pojos.ContactInformation>> findManyByDeletionDate(Collection<OffsetDateTime> values, int limit) {
        return findManyByCondition(ContactInformation.CONTACT_INFORMATION.DELETION_DATE.in(values),limit);
    }

    @Override
    public ReactiveRXQueryExecutor<ContactInformationRecord,com.dovaleac.guessing.game.jooq.jklingsporn.generated.tables.pojos.ContactInformation,Integer> queryExecutor(){
        return (ReactiveRXQueryExecutor<ContactInformationRecord,com.dovaleac.guessing.game.jooq.jklingsporn.generated.tables.pojos.ContactInformation,Integer>) super.queryExecutor();
    }
}
