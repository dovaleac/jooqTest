/*
 * This file is generated by jOOQ.
 */
package com.dovaleac.guessing.game.jooq.jklingsporn.generated.tables;


import com.dovaleac.guessing.game.jooq.jklingsporn.generated.Dealers;
import com.dovaleac.guessing.game.jooq.jklingsporn.generated.Keys;
import com.dovaleac.guessing.game.jooq.jklingsporn.generated.tables.records.DealerContactRecord;

import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row9;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DealerContact extends TableImpl<DealerContactRecord> {

    private static final long serialVersionUID = 24733173;

    /**
     * The reference instance of <code>dealers.dealer_contact</code>
     */
    public static final DealerContact DEALER_CONTACT = new DealerContact();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<DealerContactRecord> getRecordType() {
        return DealerContactRecord.class;
    }

    /**
     * The column <code>dealers.dealer_contact.id</code>.
     */
    public final TableField<DealerContactRecord, Integer> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('dealers.dealer_contact_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>dealers.dealer_contact.contact_information_id</code>.
     */
    public final TableField<DealerContactRecord, Integer> CONTACT_INFORMATION_ID = createField(DSL.name("contact_information_id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>dealers.dealer_contact.dealer_id</code>.
     */
    public final TableField<DealerContactRecord, Integer> DEALER_ID = createField(DSL.name("dealer_id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>dealers.dealer_contact.user_created</code>.
     */
    public final TableField<DealerContactRecord, String> USER_CREATED = createField(DSL.name("user_created"), org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>dealers.dealer_contact.user_updated</code>.
     */
    public final TableField<DealerContactRecord, String> USER_UPDATED = createField(DSL.name("user_updated"), org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>dealers.dealer_contact.user_deleted</code>.
     */
    public final TableField<DealerContactRecord, String> USER_DELETED = createField(DSL.name("user_deleted"), org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>dealers.dealer_contact.creation_date</code>.
     */
    public final TableField<DealerContactRecord, OffsetDateTime> CREATION_DATE = createField(DSL.name("creation_date"), org.jooq.impl.SQLDataType.TIMESTAMPWITHTIMEZONE, this, "");

    /**
     * The column <code>dealers.dealer_contact.update_date</code>.
     */
    public final TableField<DealerContactRecord, OffsetDateTime> UPDATE_DATE = createField(DSL.name("update_date"), org.jooq.impl.SQLDataType.TIMESTAMPWITHTIMEZONE, this, "");

    /**
     * The column <code>dealers.dealer_contact.deletion_date</code>.
     */
    public final TableField<DealerContactRecord, OffsetDateTime> DELETION_DATE = createField(DSL.name("deletion_date"), org.jooq.impl.SQLDataType.TIMESTAMPWITHTIMEZONE, this, "");

    /**
     * Create a <code>dealers.dealer_contact</code> table reference
     */
    public DealerContact() {
        this(DSL.name("dealer_contact"), null);
    }

    /**
     * Create an aliased <code>dealers.dealer_contact</code> table reference
     */
    public DealerContact(String alias) {
        this(DSL.name(alias), DEALER_CONTACT);
    }

    /**
     * Create an aliased <code>dealers.dealer_contact</code> table reference
     */
    public DealerContact(Name alias) {
        this(alias, DEALER_CONTACT);
    }

    private DealerContact(Name alias, Table<DealerContactRecord> aliased) {
        this(alias, aliased, null);
    }

    private DealerContact(Name alias, Table<DealerContactRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> DealerContact(Table<O> child, ForeignKey<O, DealerContactRecord> key) {
        super(child, key, DEALER_CONTACT);
    }

    @Override
    public Schema getSchema() {
        return Dealers.DEALERS;
    }

    @Override
    public Identity<DealerContactRecord, Integer> getIdentity() {
        return Keys.IDENTITY_DEALER_CONTACT;
    }

    @Override
    public UniqueKey<DealerContactRecord> getPrimaryKey() {
        return Keys.DEALER_CONTACT_PKEY;
    }

    @Override
    public List<UniqueKey<DealerContactRecord>> getKeys() {
        return Arrays.<UniqueKey<DealerContactRecord>>asList(Keys.DEALER_CONTACT_PKEY);
    }

    @Override
    public List<ForeignKey<DealerContactRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<DealerContactRecord, ?>>asList(Keys.DEALER_CONTACT__DEALER_CONTACT_CONTACT_INFORMATION_ID_FKEY, Keys.DEALER_CONTACT__DEALER_CONTACT_DEALER_ID_FKEY);
    }

    public ContactInformation contactInformation() {
        return new ContactInformation(this, Keys.DEALER_CONTACT__DEALER_CONTACT_CONTACT_INFORMATION_ID_FKEY);
    }

    public Dealer dealer() {
        return new Dealer(this, Keys.DEALER_CONTACT__DEALER_CONTACT_DEALER_ID_FKEY);
    }

    @Override
    public DealerContact as(String alias) {
        return new DealerContact(DSL.name(alias), this);
    }

    @Override
    public DealerContact as(Name alias) {
        return new DealerContact(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public DealerContact rename(String name) {
        return new DealerContact(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public DealerContact rename(Name name) {
        return new DealerContact(name, null);
    }

    // -------------------------------------------------------------------------
    // Row9 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row9<Integer, Integer, Integer, String, String, String, OffsetDateTime, OffsetDateTime, OffsetDateTime> fieldsRow() {
        return (Row9) super.fieldsRow();
    }
}
